1. try-except-else-finally
1-1. try
=> 예외가 발생할 수 있는 무엇가를 실행하는 문입니다.
1-2. except
=> try 문에 예외가 존재했다면 except문을 실행하게 됩니다.
=> 에러가 발생되는것이 아니라 except문을 실행하는 로직이 되는 것입니다.
1-3. else
=> try 이후 예외가 없었다면 실행하는 문입니다.
1-4. finally
=> 성공하든 실패하든 실행하는 문입니다.


2. try-except
2-1. except은 에러 글래스와 함께 사용할 수 있습니다.
except FileNotFoundError :
    ...
except KeyError :
    ...

2-2. 범용적으로 except를 사용한다면 try 구문의 다양한 에러를 효율적으로 처리할 수 없습니다.
=> fileNotError or KeyError 에러를 구분하지 않고 except문을 사용하기 때문입니다.

2-3. except ErrorKeword as error_message : ...
=> as vari를 통해 error 키워드에 접근할 수 있습니다.


3. try의 변수만 finally에서 사용이 가능합니다.


4. raise 키워드
=> 에러를 던지는 키워드입니다.
=> raise 키워드를 던질 떄는 예외 클래스가 필수적입니다. 예외클래스 뒤에 중괄호를 붙여서 문자열을 넣을 수 있습니다.
if ture :
    raise KeyError("올바르지 않은 키입니다.")

