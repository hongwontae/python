1. selenium webdriver
=> 브라우저와 상호작용할 수 있는 모듈입니다.


2. Chrome Drvier
=> selenium 모듈이 크롬 브라우저와 소통할 수 있는 다리 역할입니다.
=> driver = selenium.webdriver.Chrome()
2-1. driver.get('url') => browser를 여는 메서드입니다.
2-2. driver.quit() => 현재 브라우저를 닫습니다.
2-3. driver.close() => 현재 활성화 된 탭 하나를 닫습니다.
2-4. driver.maximize_window() => 브라우저 창을 최대화합니다.

2-4. driver.get(url)를 통해 browser를 열면 파이썬 코드가 끝나는 즉시 닫힙니다.
=> 이를 방지하기 위해서 밑에 설정을 driver.get를 호출하기 전에 설정합니다.
=> chrome_options = webdriver.ChromeOptions()
=> chrome_options.add_experimental_option('detach', True)


3. get을 통해 접근한 다음 element을 가져오는 방법
3-1. from selenium.webdriver.common.by import By;
=> driver.find_element()의 첫 번쨰 인자에 By.className, By.Name을 통해 식별할 속성을 설정할 수 있습니다.
3-2. driver.find_element(By.className, value='a-fraction-value')=> 해당 요소의 셀레니움 객체를 얻을 수 있습니다.
3-3. 3-2의 반환값으로 .text를 통해 태그 안의 text에 접근할 수 있습니다.

3-4. find_elements()를 통해 일치하는 값을 list로 반환합니다.


4. By
4-1. By.ID: HTML 요소의 id 속성을 기준으로 선택.
4-2. By.NAME: HTML 요소의 name 속성을 기준으로 선택.
4-3. By.CLASS_NAME: CSS 클래스 이름으로 선택.
=> 한 번에 단일 클래스 이름만 사용할 수 있습니다.

4-4. By.CSS_SELECTOR: CSS 선택자로 선택.
=> 복잡한 조건의 요소를 선택할 떄 사용합니다. css 선택자 문법을 따릅니다.

=> .className, #Id, .aaa time
4-5. By.XPATH: XPath 표현식으로 선택.
4-6. By.TAG_NAME: HTML 태그 이름으로 선택.
