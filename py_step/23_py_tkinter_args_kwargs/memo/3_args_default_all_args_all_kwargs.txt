1. default parameter
def functionName(a=1, b=2) :
    pass...
=> 이렇게 default 매개변수를 설정할 수 있습니다.


2. Turtle 클래스의 메서드들은 이미 default para가 설정되어 있습니다.
=> 원하는 설정 + 기본 설정
=> 대부분의 라이브러리 클래스는 이런 설정을 가지고 있습니다.


3. *args (js의 rest para와 비슷합니다.)
def functionName(*args) :
    print(args)
    print(type(args))
functionName(1,2,3,4,)/ 함수의 print는 (1,2,3,4), type은 tuple입니다.
=> 해당 함수는 모든 인자를 받아들이고 그 인자를 튜플로 변환하여 받아들입니다.
=> *args를 가변 인수라고도 합니다.


4. **kwargs
=> 함수를 호출할 떄 함수를 선언할 떄의 매개변수 키워드처럼 받아서 안전하게 처리할 수 있습니다.
=> **kwargs는 이런 인자를 모두 받아들여서 딕셔너리로 변환합니다.
=> 그리고 일반 인자와 함꼐 사용할 수 있습니다. (**kwargs는 add=1 같이 설정된 것만 받기 떄문에 구별이 쉽습니다.)

def function (n, **kwargs) :
    print(n)
    print(kwargs)
    print(kwargs.add)
function(10, add='add', multiply='multi', num=1000)
=> 10, {add : 'add', multiply : 'multi', num:1000}, 'add'
